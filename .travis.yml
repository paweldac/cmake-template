sudo: false
language: cpp

addons:
  apt:
    packages:
      - valgrind
      - g++-6
    sources:
     - ubuntu-toolchain-r-test

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/llvm/llvm-3.9.0
    - ${TRAVIS_BUILD_DIR}/llvm/llvm-4.0.0
    - ${TRAVIS_BUILD_DIR}/boost/boost-1.61.0
    - ${TRAVIS_BUILD_DIR}/boost/boost-1.66.0
    - ${TRAVIS_BUILD_DIR}/cmake
    - ${TRAVIS_BUILD_DIR}/cppcheck

matrix:
  include:
    - os: linux
      env: LLVM_VERSION=3.9.0 BOOST_VERSION=1.66.0 CHECK_FORMATTING=TRUE
      compiler: clang
    - os: linux
      env: LLVM_VERSION=3.9.0 BOOST_VERSION=1.66.0 BUILD_TESTS=TRUE BUILD_TYPE=Release
      compiler: clang
    - os: linux
      env: LLVM_VERSION=4.0.0 BOOST_VERSION=1.66.0 BUILD_TESTS=TRUE BUILD_TYPE=Debug
      compiler: clang
    - os: linux
      env: LLVM_VERSION=4.0.0 BOOST_VERSION=1.66.0 BUILD_TESTS=TRUE BUILD_TYPE=Release
      compiler: clang
    - os: linux
      env: GCC_VERSION=6 BOOST_VERSION=1.66.0 BUILD_TESTS=TRUE BUILD_TYPE=Debug
      compiler: gcc
    - os: linux
      env: GCC_VERSION=6 BOOST_VERSION=1.66.0 BUILD_TESTS=TRUE STATIC_ANALYSIS=TRUE BUILD_TYPE=Debug
      compiler: gcc
    - os: linux
      env: GCC_VERSION=6 BOOST_VERSION=1.66.0 BUILD_TETS=TRUE BUILD_TYPE=Release
      compiler: gcc
git:
  submodules: false

before_install:
  - git submodule update --init --recursive

install:
  # Set env variables
  - if [[ -n "${LLVM_VERSION}" ]]; then export TOOLSET=clang; fi
  - if [[ -n "${GCC_VERSION}" ]]; then export TOOLSET=gcc CXX=g++-${GCC_VERSION}; fi
  # Install CMake
  - |
    if [[ -z "$(ls -A ${TRAVIS_BUILD_DIR}/cmake/bin)" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.10/cmake-3.10.3-Linux-x86_64.tar.gz"
      mkdir -p cmake && travis_retry wget --no-check-certificate --quiet -O - "${CMAKE_URL}" | tar --strip-components=1 -xz -C cmake
    fi
    export PATH="${TRAVIS_BUILD_DIR}/cmake/bin:${PATH}"
  # Install the right version of clang, libc++ and libc++abi
  - |
    if [[ -n "${LLVM_VERSION}" ]]; then
      LLVM_ROOT="${TRAVIS_BUILD_DIR}/llvm/llvm-${LLVM_VERSION}"
      LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
      LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
      LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
      CLANG_URL="http://llvm.org/releases/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz"
      if [[ -z "$(ls -A ${LLVM_ROOT})" ]]; then
        mkdir -p ${LLVM_ROOT} ${LLVM_ROOT}/build ${LLVM_ROOT}/projects/libcxx ${LLVM_ROOT}/projects/libcxxabi ${LLVM_ROOT}/clang
        travis_retry wget --quiet -O - ${LLVM_URL}      | tar --strip-components=1 -xJ -C ${LLVM_ROOT}
        travis_retry wget --quiet -O - ${LIBCXX_URL}    | tar --strip-components=1 -xJ -C ${LLVM_ROOT}/projects/libcxx
        travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C ${LLVM_ROOT}/projects/libcxxabi
        travis_retry wget --quiet -O - ${CLANG_URL}     | tar --strip-components=1 -xJ -C ${LLVM_ROOT}/clang
        (cd ${LLVM_ROOT}/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_ROOT}/install -DCMAKE_CXX_COMPILER=clang++)
        (cd ${LLVM_ROOT}/build/projects/libcxx && make install -j2)
        (cd ${LLVM_ROOT}/build/projects/libcxxabi && make install -j2)
      fi
      export CXXFLAGS="-Qunused-arguments -nostdinc++ -isystem ${LLVM_ROOT}/install/include/c++/v1"
      export LDFLAGS="-L ${LLVM_ROOT}/install/lib -l c++ -l c++abi"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_ROOT}/install/lib"
      export PATH="${LLVM_ROOT}/clang/bin:${PATH}"
    fi
  - ${CXX} --version
  # Install Boost
  - |
    if [[ "${BOOST_VERSION}" != "" ]]; then
      BOOST_DIR=${TRAVIS_BUILD_DIR}/boost/boost-${BOOST_VERSION}
      if [[ -z "$(ls -A ${BOOST_DIR})" ]]; then
        BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//\./_}.tar.gz"
        mkdir -p ${BOOST_DIR}
        { travis_retry wget --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1
        (cd ${BOOST_DIR}/tools/build && ./bootstrap.sh --with-toolset=${TOOLSET} && ./b2 toolset=${TOOLSET} install --prefix=${TRAVIS_BUILD_DIR}/boost/b2)
        export PATH=${TRAVIS_BUILD_DIR}/boost/b2/bin:${PATH}
        (cd ${BOOST_DIR} && b2 --build-dir=${BOOST_DIR} toolset=${TOOLSET} stage)
      fi
    fi
  #Intall cppcheck
  - |
    if [[ -z "$(ls -A ${TRAVIS_BUILD_DIR}/cppcheck/bin)" ]]; then
      CPPCHECK_URL="https://github.com/danmar/cppcheck/archive/1.78.tar.gz"
      mkdir -p cppcheck && travis_retry wget --no-check-certificate --quiet -O - "${CPPCHECK_URL}" | tar --strip-components=1 -xz -C cppcheck
      (cd cppcheck && make SRCDIR=build CFGDIR=cfg HAVE_RULES=no CXXFLAGS="-O2 -DNDEBUG -Wall -Wno-sign-compare -Wno-unused-function")
      mkdir -p bin
      mv cppcheck bin/
    fi
    export PATH="${TRAVIS_BUILD_DIR}/cppcheck/bin:${PATH}"    
 
script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build
  - |
    if [[ "${CHECK_FORMATTING}" == "true" ]]; then
      cd build
      cmake -DCMAKE_CXX_COMPILER="$CXX" -DCMAKE_C_COMPILER="$CC" -DBOOST_ROOT=${BOOST_DIR} ..
      make format
      cd ..
      git diff-index --quiet HEAD -- || exit 1;
      cd ${TRAVIS_BUILD_DIR}
    fi
  - |
    if [[ "${STATIC_ANALYSIS}" == "true" ]]; then
      cd build
      cmake -DCMAKE_CXX_COMPILER="$CXX" -DCMAKE_C_COMPILER="$CC" -DBOOST_ROOT=${BOOST_DIR} ..
      cppcheck --enable=all --error-exitcode=1 --project=compile_commands.json
      cd ${TRAVIS_BUILD_DIR}
    fi
  - |
    if [[ "${BUILD_TESTS}" == "true" ]]; then
      cd build
      cmake -DCMAKE_CXX_COMPILER="$CXX" -DCMAKE_C_COMPILER="$CC" -DBUILD_TYPE="$BUILD_TYPE" -DBOOST_ROOT=${BOOST_DIR} ..
      make cmake-template.ut
      cd ${TRAVIS_BUILD_DIR}
    fi
  - cd build
  - cmake -DCMAKE_CXX_COMPILER="$CXX" -DCMAKE_C_COMPILER="$CC" -DBUILD_TYPE="$BUILD_TYPE" -DBOOST_ROOT=${BOOST_DIR} ..
  - make cmake-template.app
